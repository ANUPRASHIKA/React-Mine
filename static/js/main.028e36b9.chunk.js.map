{"version":3,"sources":["components/Search.js","components/AddApointments.js","components/AppointmentInfo.js","App.js","index.js"],"names":["DropDown","toggle","sortBy","onSortByChange","orderBy","onOrderByChange","className","role","onClick","Search","query","onQueryChange","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","onChange","event","target","placeholder","mySort","myOrder","AddAppointments","onSendAppointment","lastId","clearData","ownerName","petName","aptDate","aptTime","aptNotes","toggleForm","setToggleForm","formData","setFormData","rows","appointmentInfo","AppointmentInfo","appointment","onDeleteAppointment","App","appointmentList","setAppointmentList","setQuery","setSortBy","setOrderBy","filteredAppointmets","filter","item","toLowerCase","includes","sort","a","b","order","fetchData","useCallback","fetch","then","response","json","data","useEffect","myAppointment","reduce","max","Number","myQuery","map","appointmentId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.028e36b9.chunk.js","sourcesContent":["import { BiSearch, BiCaretDown, BiCheck } from \"react-icons/bi\"\r\nimport { useState } from \"react\";\r\n\r\nconst DropDown = ({ toggle, sortBy, onSortByChange, orderBy, onOrderByChange}) => {\r\n    if (!toggle) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56\r\n      rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\r\n            <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\r\n                <div onClick={() => { onSortByChange('petName') }}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Pet Name { ((sortBy) === 'petName') && <BiCheck />}</div>\r\n                <div onClick={() => { onSortByChange('ownerName') }}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Owner Name  { ((sortBy) === 'ownerName') && <BiCheck />}</div>\r\n                <div onClick={() => { onSortByChange('aptDate') }}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Date { ((sortBy) === 'aptDate') && <BiCheck />}</div>\r\n                <div onClick={() => { onOrderByChange('asc') }}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\r\n                    role=\"menuitem\">Asc { ((orderBy) === 'asc') && <BiCheck />}</div>\r\n                <div onClick={() => { onOrderByChange('desc') }}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Desc { ((orderBy) === 'desc') && <BiCheck />}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Search = ({ query, onQueryChange, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\r\n    let [toggleSort, setToggleSort] = useState(false)\r\n    return (\r\n        <div className=\"py-5\">\r\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <BiSearch />\r\n                    <label htmlFor=\"query\" className=\"sr-only\" />\r\n                </div>\r\n                <input type=\"text\" name=\"query\" id=\"query\" value={query} onChange={(event) => { onQueryChange(event.target.value) }}\r\n                    className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300\" placeholder=\"Search\" />\r\n                <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n                    <div>\r\n                        <button type=\"button\" onClick={() => { setToggleSort(!toggleSort) }}\r\n                            className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                            Sort By <BiCaretDown className=\"ml-2\" />\r\n                        </button>\r\n                        <DropDown toggle={toggleSort}\r\n                            sortBy={sortBy}\r\n                            onSortByChange={mySort => onSortByChange(mySort)}\r\n                            orderBy={orderBy}\r\n                            onOrderByChange={myOrder => onOrderByChange(myOrder)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import { BiCalendarPlus } from \"react-icons/bi\";\r\nimport { useState } from \"react\";\r\n\r\nconst AddAppointments = ({ onSendAppointment, lastId }) => {\r\n    const clearData = {\r\n        ownerName: '',\r\n        petName: '',\r\n        aptDate: '',\r\n        aptTime: '',\r\n        aptNotes: ''\r\n    }\r\n    let [toggleForm, setToggleForm] = useState(true);\r\n    let [formData, setFormData] = useState(clearData);\r\n\r\n    function formDataPublish() {\r\n        const appointmentInfo = {\r\n            id: lastId + 1,\r\n            ownerName: formData.ownerName,\r\n            petName: formData.petName,\r\n            aptDate: formData.aptDate + ' ' + formData.aptTime,\r\n            aptNotes: formData.aptNotes\r\n        }\r\n        onSendAppointment(appointmentInfo);\r\n        setFormData(clearData);\r\n        setToggleForm(!toggleForm)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => { setToggleForm(!toggleForm) }}\r\n                className={`bg-blue-400 text-white px-2 py-3 w-full text-left rounded-md ${toggleForm ? 'rounded-t-md' : 'rounded-md'}`}>\r\n                <div><BiCalendarPlus className=\"inline-block align-text-top\" />  Add Appointment</div>\r\n            </button>\r\n            {\r\n                toggleForm &&\r\n                <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"ownerName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Owner Name\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <input type=\"text\" name=\"ownerName\" id=\"ownerName\"\r\n                                onChange={(event) => { setFormData({ ...formData, ownerName: event.target.value }) }}\r\n                                value={formData.ownerName}\r\n                                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"petName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Pet Name\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <input type=\"text\" name=\"petName\" id=\"petName\"\r\n                                onChange={(event) => { setFormData({ ...formData, petName: event.target.value }) }}\r\n                                value={formData.petName}\r\n                                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"aptDate\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Apt Date\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <input type=\"date\" name=\"aptDate\" id=\"aptDate\"\r\n                                onChange={(event) => { setFormData({ ...formData, aptDate: event.target.value }) }}\r\n                                value={formData.aptDate}\r\n                                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"aptTime\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Apt Time\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <input type=\"time\" name=\"aptTime\" id=\"aptTime\"\r\n                                onChange={(event) => { setFormData({ ...formData, aptTime: event.target.value }) }}\r\n                                value={formData.aptTime}\r\n                                className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"aptNotes\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Appointment Notes\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <textarea id=\"aptNotes\" name=\"aptNotes\" rows=\"3\"\r\n                                onChange={(event) => { setFormData({ ...formData, aptNotes: event.target.value }) }}\r\n                                value={formData.aptNotes}\r\n                                className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Detailed comments about the condition\"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"pt-5\">\r\n                        <div className=\"flex justify-end\">\r\n                            <button type=\"submit\" onClick={formDataPublish} className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAppointments;","import { BiTrash } from 'react-icons/bi';\r\n\r\nconst AppointmentInfo = ({ appointment, onDeleteAppointment }) => {\r\n    return (\r\n        <li className=\"px-3 py-3 flex items-start\">\r\n            <button type=\"button\" onClick={() => onDeleteAppointment(appointment.id)}\r\n                className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n                <BiTrash /></button>\r\n            <div className=\"flex-grow\">\r\n                <div className=\"flex items-center\">\r\n                    <span className=\"flex-none font-medium text-2xl text-blue-500 uppercase\">{appointment.ownerName}</span>\r\n                    <span className=\"flex-grow text-right\">{appointment.aptDate}</span>\r\n                </div>\r\n                <div><b className=\"font-bold text-blue-500\">Owner's PetName:</b> {appointment.petName}</div>\r\n                <div className=\"leading-tight\">{appointment.aptNotes}</div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AppointmentInfo;\r\n","import { BiCalendar } from 'react-icons/bi';\nimport { useState, useEffect, useCallback } from 'react';\nimport Search from \"./components/Search\";\nimport AddAppointments from \"./components/AddApointments\";\nimport AppointmentInfo from './components/AppointmentInfo';\nimport { data } from 'autoprefixer';\n\nfunction App() {\n  let [appointmentList, setAppointmentList] = useState([]);\n  let [query, setQuery] = useState(\"\");\n  let [sortBy, setSortBy] = useState(\"petName\");\n  let [orderBy, setOrderBy] = useState(\"asc\");\n\n  const filteredAppointmets = appointmentList.filter(\n    item => {\n      return(\n        item.petName.toLowerCase().includes(query.toLowerCase()) ||\n        item.ownerName.toLowerCase().includes(query.toLowerCase()) ||\n        item.aptNotes.toLowerCase().includes(query.toLowerCase())\n      )\n    }\n  ).sort((a,b) => {\n    let order = (orderBy === 'asc') ? 1 : -1;\n    return (\n      a[sortBy].toLowerCase() < b[sortBy].toLowerCase() ? -1 * order : 1 * order\n    )\n  })\n\n  const fetchData = useCallback(() => {\n    fetch('./data.json')\n      .then(response => response.json())\n      .then(data => {\n        setAppointmentList(data)\n      })\n  }, []);\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData]);\n\n  return (\n    <div className=\"App container mx-auto nt-3 font-thin\">\n      <h1 className=\"text-5xl mb-3\">\n        <BiCalendar className=\"inline-block text-red-400 align-top\" /> Your To-Do-List!!!\n      </h1>\n      <AddAppointments\n       onSendAppointment={myAppointment => setAppointmentList([...appointmentList, myAppointment])}\n        lastId={appointmentList.reduce((max, item) => Number(item.id) > max ? Number(item.id) : max, 0)}>\n      </AddAppointments>\n      <Search query={query}\n        onQueryChange={myQuery => setQuery(myQuery)}\n        orderBy={orderBy}\n        onOrderByChange={myOrder => setOrderBy(myOrder)}\n        sortBy={sortBy}\n        onSortByChange={mySort => setSortBy(mySort)}\n      ></Search>\n      <ul className=\"divide-y divide-gray-200\">\n        {filteredAppointmets\n          .map(appointment => (\n            <AppointmentInfo key={appointment.id}\n              appointment={appointment}\n              onDeleteAppointment={\n                appointmentId =>\n                  setAppointmentList(appointmentList.filter(appointment => appointment.id !== appointmentId))\n              }></AppointmentInfo>\n          ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}